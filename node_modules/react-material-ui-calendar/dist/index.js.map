{"version":3,"file":"index.js","sources":["../src/DisplayMonthlyCalendar.js","../src/DisplayDailyCalendar.js","../src/DisplayYearlyCalendar.js","../src/muitheme.js","../src/index.js"],"sourcesContent":["import React from \"react\";\r\nimport {\r\n  Typography,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableRow,\r\n  Card,\r\n  CardActionArea,\r\n  CardContent\r\n} from \"@material-ui/core\";\r\nimport dateFns from \"date-fns\";\r\n\r\nconst DisplayMonthlyCalendar = props => {\r\n  let today = new Date();\r\n  const currentMonth = dateFns.getMonth(today);\r\n\r\n  /**\r\n   * If the month being displayed is the same as current month, highlight it with a gray box.\r\n   * @param {*} currentMonthCounter\r\n   */\r\n  const ifSameMonthCard = currentMonthCounter => {\r\n    if (currentMonth === currentMonthCounter) {\r\n      return { backgroundColor: \"rgba(128,128,128,0.5)\", height: \"100%\" };\r\n    } else {\r\n      return { backgroundColor: \"rgba(0,0,0,0)\", height: \"100%\" };\r\n    }\r\n  };\r\n\r\n  const months = [\r\n    { id: 0, name: \"Jan\" },\r\n    { id: 1, name: \"Feb\" },\r\n    { id: 2, name: \"Mar\" },\r\n    { id: 3, name: \"Apr\" },\r\n    { id: 4, name: \"May\" },\r\n    { id: 5, name: \"Jun\" },\r\n    { id: 6, name: \"Jul\" },\r\n    { id: 7, name: \"Aug\" },\r\n    { id: 8, name: \"Sep\" },\r\n    { id: 9, name: \"Oct\" },\r\n    { id: 10, name: \"Nov\" },\r\n    { id: 11, name: \"Dec\" }\r\n  ];\r\n  let rowsOfMonths = [];\r\n  let rows = [];\r\n  let monthCounter = 0;\r\n  let rowCounter = 0;\r\n  while (monthCounter < 12) {\r\n    for (let i = 0; i < 3; i++) {\r\n      const monthID = months[monthCounter].id;\r\n      rowsOfMonths.push(\r\n        <TableCell key={monthID}>\r\n          <CardActionArea\r\n            onClick={() => props.onSetMonth(monthID)}\r\n            style={{ height: \"100%\" }}\r\n          >\r\n            <Card style={ifSameMonthCard(monthCounter)}>\r\n              <CardContent>\r\n                <Typography align=\"center\" style={props.textColor}>\r\n                  {months[monthCounter].name}\r\n                </Typography>\r\n              </CardContent>\r\n            </Card>\r\n          </CardActionArea>\r\n        </TableCell>\r\n      );\r\n      monthCounter += 1;\r\n    }\r\n    rows.push(\r\n      <TableRow key={rowCounter} style={{ height: \"25%\" }}>\r\n        {rowsOfMonths}\r\n      </TableRow>\r\n    );\r\n    rowsOfMonths = [];\r\n    rowCounter += 1;\r\n  }\r\n\r\n  return (\r\n    <Table style={{ height: \"90%\" }}>\r\n      <TableBody>{rows}</TableBody>\r\n    </Table>\r\n  );\r\n};\r\n\r\nexport default DisplayMonthlyCalendar;\r\n","import React from \"react\";\r\nimport {\r\n  Typography,\r\n  Table,\r\n  TableBody,\r\n  TableHead,\r\n  TableCell,\r\n  TableRow,\r\n  Card,\r\n  CardActionArea,\r\n  CardContent\r\n} from \"@material-ui/core\";\r\nimport dateFns from \"date-fns\";\r\n\r\nconst DisplayDailyCalendar = props => {\r\n  const today = new Date();\r\n  const { selectedDate } = props;\r\n  const monthStart = dateFns.startOfMonth(selectedDate);\r\n  const monthEnd = dateFns.endOfMonth(monthStart);\r\n  const startDate = dateFns.startOfWeek(monthStart);\r\n  const endDate = dateFns.endOfWeek(monthEnd);\r\n\r\n  const weekdays = [\r\n    { id: 0, day: \"Sun\" },\r\n    { id: 1, day: \"Mon\" },\r\n    { id: 2, day: \"Tue\" },\r\n    { id: 3, day: \"Wed\" },\r\n    { id: 4, day: \"Thu\" },\r\n    { id: 5, day: \"Fri\" },\r\n    { id: 6, day: \"Sat\" }\r\n  ];\r\n\r\n  const eachWeek = [];\r\n  let daysOfWeek = [];\r\n\r\n  let day = startDate;\r\n  let end = endDate;\r\n  let formattedDate;\r\n  const dateFormat = \"D\";\r\n\r\n  let weekNumber = 1;\r\n  while (day <= end) {\r\n    for (let i = 0; i < 7; i++) {\r\n      formattedDate = dateFns.format(day, dateFormat);\r\n      const cloneDay = day;\r\n      daysOfWeek.push(\r\n        <TableCell key={formattedDate}>\r\n          <CardActionArea\r\n            onClick={() => props.onDateClick(dateFns.parse(cloneDay))}\r\n            style={{ height: \"100%\" }}\r\n          >\r\n            <Card\r\n              style={\r\n                dateFns.isSameDay(day, selectedDate)\r\n                  ? {\r\n                      backgroundColor: \"rgba(128,128,128,0.5)\",\r\n                      height: \"100%\"\r\n                    }\r\n                  : {\r\n                      backgroundColor: \"rgba(0,0,0,0)\",\r\n                      height: \"100%\"\r\n                    }\r\n              }\r\n            >\r\n              <CardContent>\r\n                {dateFns.isSameDay(day, today) ? (\r\n                  <Typography\r\n                    align=\"center\"\r\n                    color=\"primary\"\r\n                    style={{ fontSize: \"20px\" }}\r\n                  >\r\n                    {formattedDate}\r\n                  </Typography>\r\n                ) : (\r\n                  <Typography\r\n                    align=\"center\"\r\n                    style={\r\n                      dateFns.isSameMonth(day, monthStart)\r\n                        ? props.textColor\r\n                        : {\r\n                            color: \"rgba(128,128,128,1)\"\r\n                          }\r\n                    }\r\n                  >\r\n                    {formattedDate}\r\n                  </Typography>\r\n                )}\r\n              </CardContent>\r\n            </Card>\r\n          </CardActionArea>\r\n        </TableCell>\r\n      );\r\n\r\n      day = dateFns.addDays(day, 1);\r\n    }\r\n\r\n    eachWeek.push(<TableRow key={weekNumber}>{daysOfWeek}</TableRow>);\r\n    daysOfWeek = [];\r\n    weekNumber += 1;\r\n  }\r\n  return (\r\n    <Table style={{ height: \"90%\" }}>\r\n      <TableHead>\r\n        <TableRow>\r\n          {weekdays.map(day => (\r\n            <TableCell key={day.id}>\r\n              <Typography align=\"center\">{day.day}</Typography>\r\n            </TableCell>\r\n          ))}\r\n        </TableRow>\r\n      </TableHead>\r\n      <TableBody>{eachWeek}</TableBody>\r\n    </Table>\r\n  );\r\n};\r\n\r\nexport default DisplayDailyCalendar;\r\n","import React from \"react\";\r\nimport {\r\n  Typography,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableRow,\r\n  Card,\r\n  CardActionArea,\r\n  CardContent\r\n} from \"@material-ui/core\";\r\nimport dateFns from \"date-fns\";\r\n\r\nconst DisplayYearlyCalendar = props => {\r\n  let today = new Date();\r\n  const currentYearDateFNS = dateFns.getYear(today);\r\n  const dateYearFormat = \"YYYY\";\r\n  let pastYears = dateFns.addYears(props.year, -9);\r\n  let futureYears = dateFns.addYears(props.year, 2);\r\n  let yearStart = parseInt(dateFns.format(pastYears, dateYearFormat));\r\n  let yearEnd = parseInt(dateFns.format(futureYears, dateYearFormat));\r\n  let rowsOfYears = [];\r\n  let rows = [];\r\n  let rowCounter = 0;\r\n\r\n  /**\r\n   * If the month being displayed is the same as current month, highlight it with a gray box.\r\n   */\r\n  const ifSameCurrentYearCard = currentYearCounter => {\r\n    if (currentYearDateFNS === currentYearCounter) {\r\n      return { backgroundColor: \"rgba(128,128,128,0.5)\", height: \"100%\" };\r\n    } else {\r\n      return { backgroundColor: \"rgba(0,0,0,0)\", height: \"100%\" };\r\n    }\r\n  };\r\n\r\n  let currentYear = yearStart;\r\n  while (currentYear < yearEnd + 1) {\r\n    for (let i = 0; i < 3; i++) {\r\n      let cloneCurrentYear = currentYear;\r\n      rowsOfYears.push(\r\n        <TableCell key={currentYear}>\r\n          <CardActionArea\r\n            style={{ height: \"100%\" }}\r\n            onClick={() => props.onSetYear(cloneCurrentYear)}\r\n          >\r\n            <Card style={ifSameCurrentYearCard(cloneCurrentYear)}>\r\n              <CardContent>\r\n                <Typography align=\"center\" style={props.textColor}>\r\n                  {currentYear}\r\n                </Typography>\r\n              </CardContent>\r\n            </Card>\r\n          </CardActionArea>\r\n        </TableCell>\r\n      );\r\n      currentYear += 1;\r\n    }\r\n    rows.push(\r\n      <TableRow key={rowCounter} style={{ height: \"25%\" }}>\r\n        {rowsOfYears}\r\n      </TableRow>\r\n    );\r\n    rowsOfYears = [];\r\n    rowCounter += 1;\r\n  }\r\n\r\n  return (\r\n    <Table style={{ height: \"90%\" }}>\r\n      <TableBody>{rows}</TableBody>\r\n    </Table>\r\n  );\r\n};\r\n\r\nexport default DisplayYearlyCalendar;\r\n","//Material theme\r\nimport { createMuiTheme } from \"@material-ui/core\";\r\nimport { teal, orange, red } from \"@material-ui/core/colors\";\r\n\r\nexport const darkTheme = createMuiTheme({\r\n  typography: {\r\n    useNextVariants: true\r\n  },\r\n  palette: {\r\n    primary: { main: teal[\"A100\"] },\r\n    secondary: { main: orange[\"A100\"], light: orange[500] },\r\n    caution: { main: red[500] },\r\n    type: \"dark\"\r\n  }\r\n});\r\n\r\nexport const lightTheme = createMuiTheme({\r\n  typography: {\r\n    useNextVariants: true\r\n  },\r\n  palette: {\r\n    primary: { main: teal[\"A100\"] },\r\n    secondary: { main: orange[\"A100\"], light: orange[500] },\r\n    caution: { main: red[500] },\r\n    type: \"light\"\r\n  }\r\n});\r\n\r\n//export default theme;\r\n","import React, { Component } from \"react\";\nimport { Paper, Button, Typography, IconButton } from \"@material-ui/core\";\nimport dateFns from \"date-fns\";\nimport ChevronLeftRounded from \"@material-ui/icons/ChevronLeftRounded\";\nimport ChevronRightRounded from \"@material-ui/icons/ChevronRightRounded\";\nimport DisplayMonthlyCalendar from \"./DisplayMonthlyCalendar\";\nimport DisplayDailyCalendar from \"./DisplayDailyCalendar\";\nimport DailyYearlyCalendar from \"./DisplayYearlyCalendar\";\n\n//Material theme\nimport { MuiThemeProvider } from \"@material-ui/core\";\nimport { darkTheme, lightTheme } from \"./muitheme\";\n\nexport default class Calendar extends Component {\n  state = {\n    selectedDate: new Date(),\n    selectedMonth: new Date(),\n    mode: 0,\n    showFunctionalHeader: true,\n    selectStartandEnd: false,\n    selected1: null,\n    selected2: null,\n    functionalMode: false\n  };\n\n  /***************************************************************************************\n   * Calender Header functions\n   ***************************************************************************************/\n\n  /**\n   * Depending on the mode, the calendar header will render different text.\n   */\n  renderHeader = () => {\n    const dateYearFormat = \"YYYY\";\n    const dateMonthFormat = \"MMMM YYYY\";\n    let header;\n    if (this.state.mode === 0) {\n      header = (\n        <Typography variant=\"h5\" inline={true}>\n          {dateFns.format(this.state.selectedDate, dateMonthFormat)}\n        </Typography>\n      );\n    } else if (this.state.mode === 1) {\n      header = (\n        <Typography variant=\"h5\" inline={true}>\n          {dateFns.format(this.state.selectedDate, dateYearFormat)}\n        </Typography>\n      );\n    } else {\n      const pastFiveYears = dateFns.addYears(this.state.selectedDate, -9);\n      const nextFiveYears = dateFns.addYears(this.state.selectedDate, 2);\n      header = (\n        <Typography variant=\"h5\" inline={true}>\n          {dateFns.format(pastFiveYears, dateYearFormat)} -{\" \"}\n          {dateFns.format(nextFiveYears, dateYearFormat)}\n        </Typography>\n      );\n    }\n\n    return (\n      <Paper\n        style={{\n          backgroundColor: \"rgba(0,0,0,0)\",\n          minHeight: \"5%\"\n        }}\n      >\n        <IconButton onClick={() => this.onChevronClick(true)}>\n          <ChevronLeftRounded />\n        </IconButton>\n        <Button onClick={this.modeChange}>{header}</Button>\n        <IconButton onClick={() => this.onChevronClick(false)}>\n          <ChevronRightRounded />\n        </IconButton>\n      </Paper>\n    );\n  };\n\n  /**\n   * Render the header but without mode change.\n   */\n  renderYearHeader = () => {\n    const dateYearFormat = \"YYYY\";\n    let header;\n\n    const pastFiveYears = dateFns.addYears(this.state.selectedDate, -9);\n    const nextFiveYears = dateFns.addYears(this.state.selectedDate, 2);\n    header = (\n      <Typography variant=\"h5\" inline={true}>\n        {dateFns.format(pastFiveYears, dateYearFormat)} -{\" \"}\n        {dateFns.format(nextFiveYears, dateYearFormat)}\n      </Typography>\n    );\n\n    return (\n      <Paper\n        style={{\n          backgroundColor: \"rgba(0,0,0,0)\",\n          minHeight: \"5%\"\n        }}\n      >\n        <IconButton onClick={() => this.yearChevronClick(true)}>\n          <ChevronLeftRounded />\n        </IconButton>\n        {header}\n        <IconButton onClick={() => this.yearChevronClick(false)}>\n          <ChevronRightRounded />\n        </IconButton>\n      </Paper>\n    );\n  };\n\n  /*\n   * Clicking on the header will change the mode between days, months and years.\n   */\n  modeChange = () => {\n    if (this.state.mode === 0) {\n      this.setState({ mode: 1 });\n    } else if (this.state.mode === 1) {\n      this.setState({ mode: 2, selectedDate: new Date() });\n    } else {\n      this.setState({ mode: 0, selectedDate: new Date() });\n    }\n  };\n\n  /*\n   * Clicking on the chevron buttons next to the calendar will add or subtract months/year/decades.\n   */\n  onChevronClick = direction => {\n    if (direction) {\n      if (this.state.mode === 0) {\n        this.setState({\n          selectedDate: dateFns.addMonths(this.state.selectedDate, -1)\n        });\n      } else if (this.state.mode === 1) {\n        this.setState({\n          selectedDate: dateFns.addYears(this.state.selectedDate, -1)\n        });\n      } else {\n        this.setState({\n          selectedDate: dateFns.addYears(this.state.selectedDate, -9)\n        });\n      }\n    } else {\n      if (this.state.mode === 0) {\n        this.setState({\n          selectedDate: dateFns.addMonths(this.state.selectedDate, 1)\n        });\n      } else if (this.state.mode === 1) {\n        this.setState({\n          selectedDate: dateFns.addYears(this.state.selectedDate, 1)\n        });\n      } else {\n        this.setState({\n          selectedDate: dateFns.addYears(this.state.selectedDate, 9)\n        });\n      }\n    }\n  };\n\n  /*\n   * Clicking on the chevron buttons next to the calendar will add or subtract months/year/decades.\n   */\n  yearChevronClick = direction => {\n    if (direction) {\n      this.setState({\n        selectedDate: dateFns.addYears(this.state.selectedDate, -9)\n      });\n    } else {\n      this.setState({\n        selectedDate: dateFns.addYears(this.state.selectedDate, 9)\n      });\n    }\n  };\n\n  /***************************************************************************************\n   * Calendar functions (on click)\n   ***************************************************************************************/\n\n  /**\n   * Clicking on a date in mode 0 (Day calendar mode)\n   */\n  onDateClick = day => {\n    this.setState({\n      selectedDate: day\n    });\n\n    //This is for returning date when publishing\n    if (\n      this.props.selection !== undefined &&\n      this.props.mode !== \"month\" &&\n      this.props.mode !== \"year\"\n    ) {\n      this.props.selection(day);\n    }\n  };\n\n  /**\n   * Clicking on a month in mode 1 will set the month and return back to the day calendar.(Monthly calendar mode)\n   * If explicitly set to month mode, it will only return the month value.\n   * Else it will change back to mode 0.\n   */\n  onSetMonth = value => {\n    if (this.props.selection !== undefined && this.props.mode === \"month\") {\n      this.props.selection(value);\n    } else {\n      var result = dateFns.setMonth(this.state.selectedDate, value);\n      this.setState({ selectedDate: result, mode: 0 });\n    }\n  };\n\n  /**\n   * Clicking on a year in mode 2 will set the year and return back to monthly calendar. (Yearly calendar mode)\n   * If explicitly set to year mode, it will only return the year value.\n   * Else it will change back to mode 1.\n   */\n  onYearClick = value => {\n    if (this.props.selection !== undefined && this.props.mode === \"year\") {\n      this.props.selection(value);\n    } else {\n      this.setState({\n        mode: 1,\n        selectedDate: dateFns.setYear(this.state.selectedDate, value)\n      });\n    }\n  };\n\n  /***************************************************************************************\n   * Renders the entire body of the calendar\n   * Alternate between day, month and year.\n   ***************************************************************************************/\n\n  /**\n   * Renders the regular calendar that can switch between day, month and year view.\n   */\n  defaultDaySelector = () => {\n    let textColor;\n    if (this.props.light) {\n      textColor = { color: \"rgba(0,0,0,1)\" };\n    } else {\n      textColor = { color: \"rgba(256,256,256,1)\" };\n    }\n    let body;\n    if (this.state.mode === 0) {\n      body = (\n        <DisplayDailyCalendar\n          selectedDate={this.state.selectedDate}\n          onDateClick={this.onDateClick}\n          light={textColor}\n        />\n      );\n    } else if (this.state.mode === 1) {\n      body = (\n        <DisplayMonthlyCalendar\n          onSetMonth={this.onSetMonth}\n          light={textColor}\n        />\n      );\n    } else {\n      body = (\n        <DailyYearlyCalendar\n          year={this.state.selectedDate}\n          onSetYear={this.onYearClick}\n          light={textColor}\n        />\n      );\n    }\n\n    return (\n      <div style={{ height: \"100%\" }}>\n        {this.renderHeader()}\n        {body}\n      </div>\n    );\n  };\n\n  /**\n   * Only render the month calendar and does not switch modes.\n   */\n  monthSelector = () => {\n    let textColor;\n    if (this.props.light) {\n      textColor = { color: \"rgba(0,0,0,1)\" };\n    } else {\n      textColor = { color: \"rgba(256,256,256,1)\" };\n    }\n    return (\n      <DisplayMonthlyCalendar onSetMonth={this.onSetMonth} light={textColor} />\n    );\n  };\n\n  /**\n   * Only render the year calendar and does not switch modes.\n   */\n  yearSelector = () => {\n    let textColor;\n    if (this.props.light) {\n      textColor = { color: \"rgba(0,0,0,1)\" };\n    } else {\n      textColor = { color: \"rgba(256,256,256,1)\" };\n    }\n    return (\n      <div style={{ height: \"100%\" }}>\n        {this.renderYearHeader()}\n        <DailyYearlyCalendar\n          year={this.state.selectedDate}\n          onSetYear={this.onYearClick}\n          light={textColor}\n        />\n      </div>\n    );\n  };\n  //year={this.state.selectedDate}\n  /**\n   * Depending on the props given, renders the different modes.\n   */\n  modeSelector = () => {\n    if (this.props.mode === \"year\") {\n      return this.yearSelector();\n    } else if (this.props.mode === \"month\") {\n      return this.monthSelector();\n    } else {\n      return this.defaultDaySelector();\n    }\n  };\n  /**\n   * Main render method\n   */\n  render() {\n    return (\n      <MuiThemeProvider theme={this.props.light ? lightTheme : darkTheme}>\n        <Paper style={this.props.generalStyle}>{this.modeSelector()}</Paper>\n      </MuiThemeProvider>\n    );\n  }\n}\n"],"names":["DisplayMonthlyCalendar","today","Date","currentMonth","dateFns","getMonth","ifSameMonthCard","currentMonthCounter","backgroundColor","height","months","id","name","rowsOfMonths","rows","monthCounter","rowCounter","i","monthID","push","React","props","onSetMonth","textColor","DisplayDailyCalendar","selectedDate","monthStart","startOfMonth","monthEnd","endOfMonth","startDate","startOfWeek","endDate","endOfWeek","weekdays","day","eachWeek","daysOfWeek","end","formattedDate","dateFormat","weekNumber","format","cloneDay","onDateClick","parse","isSameDay","fontSize","isSameMonth","addDays","map","DisplayYearlyCalendar","currentYearDateFNS","getYear","dateYearFormat","pastYears","addYears","year","futureYears","yearStart","parseInt","yearEnd","rowsOfYears","ifSameCurrentYearCard","currentYearCounter","currentYear","cloneCurrentYear","onSetYear","darkTheme","createMuiTheme","main","teal","orange","light","red","lightTheme","Calendar","state","renderHeader","dateMonthFormat","header","mode","pastFiveYears","nextFiveYears","onChevronClick","modeChange","renderYearHeader","yearChevronClick","setState","direction","addMonths","selection","undefined","value","result","setMonth","onYearClick","setYear","defaultDaySelector","color","body","DailyYearlyCalendar","monthSelector","yearSelector","modeSelector","generalStyle","Component"],"mappings":"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"}